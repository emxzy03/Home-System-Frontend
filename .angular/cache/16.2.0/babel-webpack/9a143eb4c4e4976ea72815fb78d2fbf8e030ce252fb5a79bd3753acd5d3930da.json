{"ast":null,"code":"var _class;\nimport { Validators } from '@angular/forms';\nimport { Property } from 'src/app/Interface/Property';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/housing.service\";\nimport * as i4 from \"ngx-bootstrap/tabs\";\nconst _c0 = [\"formTabs\"];\n// export class AddPropertyComponent implements OnInit {\n// //  @ViewChild('Form') addPropertyForm!: NgForm;\n//  @ViewChild('formTabs') formTabs?: TabsetComponent;\n//  addPropertyForm!: FormGroup;\n//  nextClicked!: boolean;\n//  property = new Property();\n//  // Will come from masters\n//   propertyTypes: Array<string> = [ \"Single-Family Homes\", \"Shop Houses\",\"Town house\",\"Apartment\",\"Condominium\",\"Cooperative Housing\",\"Mobile Home\",\"Time-Share Homes\",]\n//   furnishTypes: Array<string> = ['Fully', 'Semi', 'Unfurnished']\n//   propertyView: IPropertyBase = {\n//     Id: null,\n//     Name: '',\n//     Price: null,\n//     SellRent: null,\n//     PType: null,\n//     FType: null,\n//     BHK: null,\n//     BuiltArea: null,\n//     City: null,\n//     RTM: null\n//   };\n//   constructor(private fb: FormBuilder,\n//     private router: Router,\n//     private housingService: HousingService,\n//     ) { }\n//   ngOnInit() {\n//     this.CreateAddPropertyForm();\n//   }\n//   CreateAddPropertyForm() {\n//     this.addPropertyForm = this.fb.group({\n//       BasicInfo: this.fb.group({\n//         SellRent: ['1' , Validators.required],\n//         BHK: [null, Validators.required],\n//         PType: [null, Validators.required],\n//         FType: [null, Validators.required],\n//         Name: [null, Validators.required],\n//         City: [null, Validators.required]\n//       }),\n//       PriceInfo: this.fb.group({\n//         Price: [null, Validators.required],\n//         BuiltArea: [null, Validators.required],\n//         CarpetArea: [null],\n//         Security: [null],\n//         Maintenance: [null],\n//       }),\n//       AddressInfo: this.fb.group({\n//         FloorNo: [null],\n//         TotalFloor: [null],\n//         Address: [null, Validators.required],\n//         LandMark: [null],\n//       }),\n//       OtherInfo: this.fb.group({\n//         RTM: [null, Validators.required],\n//         PossessionOn: [null],\n//         AOP: [null],\n//         Gated: [null],\n//         MainEntrance: [null],\n//         Description: [null]\n//       })\n//       });\n//   }\n//   /////// Gettet Method //////\n//   //#region <Getter Methods>\n//   // #region <FormGroups>\n//   get BasicInfo(){\n//     return this.addPropertyForm.controls['BasicInfo'] as FormGroup;\n//   }\n//   get PriceInfo(){\n//     return this.addPropertyForm.controls['PriceInfo'] as FormGroup;\n//   }\n//   get AddressInfo(){\n//     return this.addPropertyForm.controls['AddressInfo'] as FormGroup;\n//   }\n//   get OtherInfo(){\n//     return this.addPropertyForm.controls['OtherInfo'] as FormGroup;\n//   }\n//   ////////////////////////////\n//     // #endregion\n//   //#region <Form Controls\n//   get SellRent() {\n//     return this.BasicInfo.controls['SellRen'] as FormControl;\n//   }\n//   get BHK() {\n//     return this.BasicInfo.controls['BHK'] as FormControl;\n//   }\n//   get PType() {\n//     return this.BasicInfo.controls['PType'] as FormControl;\n//   }\n//   get FType() {\n//     return this.BasicInfo.controls['FType'] as FormControl;\n//   }\n//   get Name() {\n//     return this.BasicInfo.controls['Name'] as FormControl;\n//   }\n//   get City() {\n//     return this.BasicInfo.controls['City'] as FormControl;\n//   }\n//   get Price() {\n//     return this.PriceInfo.controls['Price'] as FormControl;\n//   }\n//   get BuiltArea() {\n//     return this.PriceInfo.controls['BuiltArea'] as FormControl;\n//   }\n//   get CarpetArea() {\n//     return this.PriceInfo.controls['CarpetArea'] as FormControl;\n//   }\n//   get Security() {\n//     return this.PriceInfo.controls['Security'] as FormControl;\n//   }\n//   get Maintenance() {\n//     return this.PriceInfo.controls['Maintenance'] as FormControl;\n//   }\n//   get FloorNo() {\n//     return this.AddressInfo.controls['FloorNo'] as FormControl;\n//   }\n//   get TotalFloor() {\n//     return this.AddressInfo.controls['TotalFloor'] as FormControl;\n//   }\n//   get Address() {\n//     return this.AddressInfo.controls['Address'] as FormControl;\n//   }\n//   get LandMark() {\n//     return this.AddressInfo.controls['LandMark'] as FormControl;\n//   }\n//   get RTM() {\n//     return this.OtherInfo.controls['RTM ']as FormControl;\n//   }\n//   get PossessionOn() {\n//     return this.OtherInfo.controls['PossessionOn'] as FormControl;\n//   }\n//   get AOP() {\n//     return this.OtherInfo.controls['AOP'] as FormControl;\n//   }\n//   get Gated() {\n//     return this.OtherInfo.controls['Gated'] as FormControl;\n//   }\n//   get MainEntrance() {\n//     return this.OtherInfo.controls['MainEntrance'] as FormControl;\n//   }\n//   get Description() {\n//     return this.OtherInfo.controls['Description'] as FormControl;\n//   }\n// //#endregion\n// //#endregion\n//   onBack() {\n//     this.router.navigate(['/']);\n//   }\n//   onSubmit() {\n//     this.nextClicked = true;\n//     if (this.allTabsValid()) {\n//       this.mapProperty();\n//       this.housingService.addProperty(this.property);\n//       alert('Congrats, your property listed successfully on our website');\n//       console.log(this.addPropertyForm);\n//       if(this.SellRent.value === '2') {\n//         this.router.navigate(['/rent-property']);\n//       } else {\n//         this.router.navigate(['/']);\n//       }\n//     } else {\n//       alert('Please review the form and provide all valid entries');\n//     }\n//   }\n//  mapProperty(): void {\n//     this.property.SellRent = +this.SellRent.value;\n//     this.property.BHK = this.BHK.value;\n//     this.property.PType = this.PType.value;\n//     this.property.Name = this.Name.value;\n//     this.property.City = this.City.value;\n//     this.property.FType = this.FType.value;\n//     this.property.Price = this.Price.value;\n//     this.property.Security = this.Security.value;\n//     this.property.Maintenance = this.Maintenance.value;\n//     this.property.BuiltArea = this.BuiltArea.value;\n//     this.property.CarpetArea = this.CarpetArea.value;\n//     this.property.FloorNo = this.FloorNo.value;\n//     this.property.TotalFloor = this.TotalFloor.value;\n//     this.property.Address = this.Address.value;\n//     this.property.Address2 = this.LandMark.value;\n//     this.property.RTM = this.RTM.value;\n//     this.property.AOP = this.AOP.value;\n//     this.property.Gated = this.Gated.value;\n//     this.property.MainEntrance = this.MainEntrance.value;\n//     this.property.Possession = this.PossessionOn.value;\n//     this.property.Description = this.Description.value;\n//     this.property.PostedOn = new Date().toString();\n//   }\n//   allTabsValid(): boolean {\n//     if (this.BasicInfo.invalid) {\n//       this.formTabs!.tabs[0].active = true;\n//       return false;\n//     }\n//     if (this.PriceInfo.invalid) {\n//       this.formTabs!.tabs[1].active = true;\n//       return false;\n//     }\n//     if (this.AddressInfo.invalid) {\n//       this.formTabs!.tabs[2].active = true;\n//       return false;\n//     }\n//     if (this.OtherInfo.invalid) {\n//       this.formTabs!.tabs[3].active = true;\n//       return false;\n//     }\n//     return true;\n//   }\n//   selectTab(tabId: number, IsCurrentTabValid: boolean) {\n//     this.nextClicked = true; \n//     if (this.formTabs?.tabs[tabId]) {\n//       this.formTabs.tabs[tabId].active = true;\n//     }\n//   } \n//   // selectTab(tabId: number, IsCurrentTabValid: boolean) {\n//   //   this.nextClick = true;\n//   //   if(IsCurrentTabValid){\n//   //      if (this.formTabs?.tabs[tabId]) {\n//   //     this.formTabs.tabs[tabId].active = true;\n//   //   }\n//   //   }\n//   // }\n// }\nexport class AddPropertyComponent {\n  constructor(fb, router, housingService) {\n    this.fb = fb;\n    this.router = router;\n    this.housingService = housingService;\n    this.property = new Property();\n    // Will come from masters\n    this.propertyTypes = [\"Single-Family Homes\", \"Shop Houses\", \"Town house\", \"Apartment\", \"Condominium\", \"Cooperative Housing\", \"Mobile Home\", \"Time-Share Homes\"];\n    this.furnishTypes = ['Fully', 'Semi', 'Unfurnished'];\n    this.propertyView = {\n      Id: null,\n      Name: '',\n      Price: null,\n      SellRent: null,\n      PType: null,\n      FType: null,\n      BHK: null,\n      BuiltArea: null,\n      City: null,\n      RTM: null\n    };\n  }\n  ngOnInit() {\n    this.CreateAddPropertyForm();\n  }\n  CreateAddPropertyForm() {\n    this.addPropertyForm = this.fb.group({\n      BasicInfo: this.fb.group({\n        SellRent: ['1', Validators.required],\n        BHK: [null, Validators.required],\n        PType: [null, Validators.required],\n        FType: [null, Validators.required],\n        Name: [null, Validators.required],\n        City: [null, Validators.required]\n      }),\n      PriceInfo: this.fb.group({\n        Price: [null, Validators.required],\n        BuiltArea: [null, Validators.required],\n        CarpetArea: [null],\n        Security: [null],\n        Maintenance: [null]\n      }),\n      AddressInfo: this.fb.group({\n        FloorNo: [null],\n        TotalFloor: [null],\n        Address: [null, Validators.required],\n        LandMark: [null]\n      }),\n      OtherInfo: this.fb.group({\n        RTM: [null, Validators.required],\n        PossessionOn: [null],\n        AOP: [null],\n        Gated: [null],\n        MainEntrance: [null],\n        Description: [null]\n      })\n    });\n  }\n  /////// Gettet Method //////\n  //#region <Getter Methods>\n  // #region <FormGroups>\n  get BasicInfo() {\n    return this.addPropertyForm.controls['BasicInfo'];\n  }\n  get PriceInfo() {\n    return this.addPropertyForm.controls['PriceInfo'];\n  }\n  get AddressInfo() {\n    return this.addPropertyForm.controls['AddressInfo'];\n  }\n  get OtherInfo() {\n    return this.addPropertyForm.controls['OtherInfo'];\n  }\n  ////////////////////////////\n  // #endregion\n  //#region <Form Controls\n  get SellRent() {\n    return this.BasicInfo.controls['SellRen'];\n  }\n  get BHK() {\n    return this.BasicInfo.controls['BHK'];\n  }\n  get PType() {\n    return this.BasicInfo.controls['PType'];\n  }\n  get FType() {\n    return this.BasicInfo.controls['FType'];\n  }\n  get Name() {\n    return this.BasicInfo.controls['Name'];\n  }\n  get City() {\n    return this.BasicInfo.controls['City'];\n  }\n  get Price() {\n    return this.PriceInfo.controls['Price'];\n  }\n  get BuiltArea() {\n    return this.PriceInfo.controls['BuiltArea'];\n  }\n  get CarpetArea() {\n    return this.PriceInfo.controls['CarpetArea'];\n  }\n  get Security() {\n    return this.PriceInfo.controls['Security'];\n  }\n  get Maintenance() {\n    return this.PriceInfo.controls['Maintenance'];\n  }\n  get FloorNo() {\n    return this.AddressInfo.controls['FloorNo'];\n  }\n  get TotalFloor() {\n    return this.AddressInfo.controls['TotalFloor'];\n  }\n  get Address() {\n    return this.AddressInfo.controls['Address'];\n  }\n  get LandMark() {\n    return this.AddressInfo.controls['LandMark'];\n  }\n  get RTM() {\n    return this.OtherInfo.controls['RTM '];\n  }\n  get PossessionOn() {\n    return this.OtherInfo.controls['PossessionOn'];\n  }\n  get AOP() {\n    return this.OtherInfo.controls['AOP'];\n  }\n  get Gated() {\n    return this.OtherInfo.controls['Gated'];\n  }\n  get MainEntrance() {\n    return this.OtherInfo.controls['MainEntrance'];\n  }\n  get Description() {\n    return this.OtherInfo.controls['Description'];\n  }\n  //#endregion\n  //#endregion\n  onBack() {\n    this.router.navigate(['/']);\n  }\n  onSubmit() {\n    this.mapProperty();\n    this.housingService.addProperty(this.property);\n    alert('Congrats, your property listed successfully on our website');\n    console.log(this.addPropertyForm);\n    if (this.SellRent.value === '2') {\n      this.router.navigate(['/rent-property']);\n    } else {\n      this.router.navigate(['/']);\n    }\n  }\n  mapProperty() {\n    this.property.SellRent = +this.SellRent.value;\n    this.property.BHK = this.BHK.value;\n    this.property.PType = this.PType.value;\n    this.property.Name = this.Name.value;\n    this.property.City = this.City.value;\n    this.property.FType = this.FType.value;\n    this.property.Price = this.Price.value;\n    this.property.Security = this.Security.value;\n    this.property.Maintenance = this.Maintenance.value;\n    this.property.BuiltArea = this.BuiltArea.value;\n    this.property.CarpetArea = this.CarpetArea.value;\n    this.property.FloorNo = this.FloorNo.value;\n    this.property.TotalFloor = this.TotalFloor.value;\n    this.property.Address = this.Address.value;\n    this.property.Address2 = this.LandMark.value;\n    this.property.RTM = this.RTM.value;\n    this.property.AOP = this.AOP.value;\n    this.property.Gated = this.Gated.value;\n    this.property.MainEntrance = this.MainEntrance.value;\n    this.property.Possession = this.PossessionOn.value;\n    this.property.Description = this.Description.value;\n    this.property.PostedOn = new Date().toString();\n  }\n  selectTab(tabId) {\n    this.formTabs.tabs[tabId].active = true;\n  }\n}\n_class = AddPropertyComponent;\n_class.ɵfac = function AddPropertyComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.HousingService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-property\"]],\n  viewQuery: function AddPropertyComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formTabs = _t.first);\n    }\n  },\n  decls: 7,\n  vars: 1,\n  consts: [[3, \"justified\"], [\"heading\", \"Justified\"], [\"heading\", \"SJ\"], [\"heading\", \"Long Justified\"]],\n  template: function AddPropertyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"tabset\", 0)(1, \"tab\", 1);\n      i0.ɵɵtext(2, \"Justified content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"tab\", 2);\n      i0.ɵɵtext(4, \"Short Labeled Justified content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"tab\", 3);\n      i0.ɵɵtext(6, \"Long Labeled Justified content\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"justified\", true);\n    }\n  },\n  dependencies: [i4.TabDirective, i4.TabsetComponent],\n  styles: [\".photo-control[_ngcontent-%COMP%]{\\n  min-height: 300px;\\n  vertical-align: middle;\\n  border: 1px dashed blue;\\n  margin: 5px;\\n  text-align: center;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcHJvcGVydHktY2FyZC9hZGQtcHJvcGVydHkvYWRkLXByb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixXQUFXO0VBQ1gsa0JBQWtCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLnBob3RvLWNvbnRyb2x7XG4gIG1pbi1oZWlnaHQ6IDMwMHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXI6IDFweCBkYXNoZWQgYmx1ZTtcbiAgbWFyZ2luOiA1cHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["Validators","Property","AddPropertyComponent","constructor","fb","router","housingService","property","propertyTypes","furnishTypes","propertyView","Id","Name","Price","SellRent","PType","FType","BHK","BuiltArea","City","RTM","ngOnInit","CreateAddPropertyForm","addPropertyForm","group","BasicInfo","required","PriceInfo","CarpetArea","Security","Maintenance","AddressInfo","FloorNo","TotalFloor","Address","LandMark","OtherInfo","PossessionOn","AOP","Gated","MainEntrance","Description","controls","onBack","navigate","onSubmit","mapProperty","addProperty","alert","console","log","value","Address2","Possession","PostedOn","Date","toString","selectTab","tabId","formTabs","tabs","active","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","i3","HousingService","selectors","viewQuery","AddPropertyComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty"],"sources":["C:\\code\\Angular\\my_app\\frontend\\src\\app\\property-card\\add-property\\add-property.component.ts","C:\\code\\Angular\\my_app\\frontend\\src\\app\\property-card\\add-property\\add-property.component.html"],"sourcesContent":["import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport {Router} from '@angular/router';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { IPropertyBase } from 'src/app/Interface/IPropertybase';\nimport { Property } from 'src/app/Interface/Property';\nimport { HousingService } from 'src/app/services/housing.service';\n\n@Component({\n  selector: 'app-add-property',\n  templateUrl: './add-property.component.html',\n  styleUrls: ['./add-property.component.css']\n})\n// export class AddPropertyComponent implements OnInit {\n// //  @ViewChild('Form') addPropertyForm!: NgForm;\n//  @ViewChild('formTabs') formTabs?: TabsetComponent;\n//  addPropertyForm!: FormGroup;\n//  nextClicked!: boolean;\n//  property = new Property();\n\n  \n//  // Will come from masters\n//   propertyTypes: Array<string> = [ \"Single-Family Homes\", \"Shop Houses\",\"Town house\",\"Apartment\",\"Condominium\",\"Cooperative Housing\",\"Mobile Home\",\"Time-Share Homes\",]\n//   furnishTypes: Array<string> = ['Fully', 'Semi', 'Unfurnished']\n\n//   propertyView: IPropertyBase = {\n//     Id: null,\n//     Name: '',\n//     Price: null,\n//     SellRent: null,\n//     PType: null,\n//     FType: null,\n//     BHK: null,\n//     BuiltArea: null,\n//     City: null,\n//     RTM: null\n//   };\n\n\n//   constructor(private fb: FormBuilder,\n//     private router: Router,\n//     private housingService: HousingService,\n//     ) { }\n\n//   ngOnInit() {\n//     this.CreateAddPropertyForm();\n//   }\n\n//   CreateAddPropertyForm() {\n//     this.addPropertyForm = this.fb.group({\n//       BasicInfo: this.fb.group({\n//         SellRent: ['1' , Validators.required],\n//         BHK: [null, Validators.required],\n//         PType: [null, Validators.required],\n//         FType: [null, Validators.required],\n//         Name: [null, Validators.required],\n//         City: [null, Validators.required]\n//       }),\n\n//       PriceInfo: this.fb.group({\n//         Price: [null, Validators.required],\n//         BuiltArea: [null, Validators.required],\n//         CarpetArea: [null],\n//         Security: [null],\n//         Maintenance: [null],\n//       }),\n\n//       AddressInfo: this.fb.group({\n//         FloorNo: [null],\n//         TotalFloor: [null],\n//         Address: [null, Validators.required],\n//         LandMark: [null],\n//       }),\n\n//       OtherInfo: this.fb.group({\n//         RTM: [null, Validators.required],\n//         PossessionOn: [null],\n//         AOP: [null],\n//         Gated: [null],\n//         MainEntrance: [null],\n//         Description: [null]\n//       })\n//       });\n//   }\n\n//   /////// Gettet Method //////\n//   //#region <Getter Methods>\n//   // #region <FormGroups>\n\n//   get BasicInfo(){\n//     return this.addPropertyForm.controls['BasicInfo'] as FormGroup;\n//   }\n\n//   get PriceInfo(){\n//     return this.addPropertyForm.controls['PriceInfo'] as FormGroup;\n//   }\n\n//   get AddressInfo(){\n//     return this.addPropertyForm.controls['AddressInfo'] as FormGroup;\n//   }\n\n//   get OtherInfo(){\n//     return this.addPropertyForm.controls['OtherInfo'] as FormGroup;\n//   }\n\n  \n//   ////////////////////////////\n\n//     // #endregion\n\n//   //#region <Form Controls\n//   get SellRent() {\n//     return this.BasicInfo.controls['SellRen'] as FormControl;\n//   }\n\n//   get BHK() {\n//     return this.BasicInfo.controls['BHK'] as FormControl;\n//   }\n\n//   get PType() {\n//     return this.BasicInfo.controls['PType'] as FormControl;\n//   }\n\n//   get FType() {\n//     return this.BasicInfo.controls['FType'] as FormControl;\n//   }\n\n//   get Name() {\n//     return this.BasicInfo.controls['Name'] as FormControl;\n//   }\n\n//   get City() {\n//     return this.BasicInfo.controls['City'] as FormControl;\n//   }\n\n//   get Price() {\n//     return this.PriceInfo.controls['Price'] as FormControl;\n//   }\n\n//   get BuiltArea() {\n//     return this.PriceInfo.controls['BuiltArea'] as FormControl;\n//   }\n\n//   get CarpetArea() {\n//     return this.PriceInfo.controls['CarpetArea'] as FormControl;\n//   }\n\n//   get Security() {\n//     return this.PriceInfo.controls['Security'] as FormControl;\n//   }\n\n//   get Maintenance() {\n//     return this.PriceInfo.controls['Maintenance'] as FormControl;\n//   }\n\n//   get FloorNo() {\n//     return this.AddressInfo.controls['FloorNo'] as FormControl;\n//   }\n\n//   get TotalFloor() {\n//     return this.AddressInfo.controls['TotalFloor'] as FormControl;\n//   }\n\n//   get Address() {\n//     return this.AddressInfo.controls['Address'] as FormControl;\n//   }\n\n//   get LandMark() {\n//     return this.AddressInfo.controls['LandMark'] as FormControl;\n//   }\n\n//   get RTM() {\n//     return this.OtherInfo.controls['RTM ']as FormControl;\n//   }\n\n//   get PossessionOn() {\n//     return this.OtherInfo.controls['PossessionOn'] as FormControl;\n//   }\n\n//   get AOP() {\n//     return this.OtherInfo.controls['AOP'] as FormControl;\n//   }\n\n//   get Gated() {\n//     return this.OtherInfo.controls['Gated'] as FormControl;\n//   }\n\n//   get MainEntrance() {\n//     return this.OtherInfo.controls['MainEntrance'] as FormControl;\n//   }\n\n//   get Description() {\n//     return this.OtherInfo.controls['Description'] as FormControl;\n//   }\n\n// //#endregion\n// //#endregion\n\n\n//   onBack() {\n//     this.router.navigate(['/']);\n//   }\n\n//   onSubmit() {\n//     this.nextClicked = true;\n//     if (this.allTabsValid()) {\n//       this.mapProperty();\n//       this.housingService.addProperty(this.property);\n//       alert('Congrats, your property listed successfully on our website');\n//       console.log(this.addPropertyForm);\n\n//       if(this.SellRent.value === '2') {\n//         this.router.navigate(['/rent-property']);\n//       } else {\n//         this.router.navigate(['/']);\n//       }\n\n\n//     } else {\n//       alert('Please review the form and provide all valid entries');\n//     }\n//   }\n//  mapProperty(): void {\n//     this.property.SellRent = +this.SellRent.value;\n//     this.property.BHK = this.BHK.value;\n//     this.property.PType = this.PType.value;\n//     this.property.Name = this.Name.value;\n//     this.property.City = this.City.value;\n//     this.property.FType = this.FType.value;\n//     this.property.Price = this.Price.value;\n//     this.property.Security = this.Security.value;\n//     this.property.Maintenance = this.Maintenance.value;\n//     this.property.BuiltArea = this.BuiltArea.value;\n//     this.property.CarpetArea = this.CarpetArea.value;\n//     this.property.FloorNo = this.FloorNo.value;\n//     this.property.TotalFloor = this.TotalFloor.value;\n//     this.property.Address = this.Address.value;\n//     this.property.Address2 = this.LandMark.value;\n//     this.property.RTM = this.RTM.value;\n//     this.property.AOP = this.AOP.value;\n//     this.property.Gated = this.Gated.value;\n//     this.property.MainEntrance = this.MainEntrance.value;\n//     this.property.Possession = this.PossessionOn.value;\n//     this.property.Description = this.Description.value;\n//     this.property.PostedOn = new Date().toString();\n//   }\n\n//   allTabsValid(): boolean {\n//     if (this.BasicInfo.invalid) {\n//       this.formTabs!.tabs[0].active = true;\n//       return false;\n//     }\n\n//     if (this.PriceInfo.invalid) {\n//       this.formTabs!.tabs[1].active = true;\n//       return false;\n//     }\n\n//     if (this.AddressInfo.invalid) {\n//       this.formTabs!.tabs[2].active = true;\n//       return false;\n//     }\n\n//     if (this.OtherInfo.invalid) {\n//       this.formTabs!.tabs[3].active = true;\n//       return false;\n//     }\n//     return true;\n//   }\n\n\n \n//   selectTab(tabId: number, IsCurrentTabValid: boolean) {\n//     this.nextClicked = true; \n//     if (this.formTabs?.tabs[tabId]) {\n//       this.formTabs.tabs[tabId].active = true;\n//     }\n//   } \n//   // selectTab(tabId: number, IsCurrentTabValid: boolean) {\n//   //   this.nextClick = true;\n//   //   if(IsCurrentTabValid){\n//   //      if (this.formTabs?.tabs[tabId]) {\n//   //     this.formTabs.tabs[tabId].active = true;\n//   //   }\n//   //   }\n   \n//   // }\n// }\nexport class AddPropertyComponent implements OnInit {\n  // @ViewChild('Form') addPropertyForm: NgForm;\n  @ViewChild('formTabs') formTabs!: TabsetComponent;\n  addPropertyForm!: FormGroup;\n  nextClicked!: boolean;\n  property = new Property();\n\n  // Will come from masters\n  propertyTypes: Array<string> = [ \"Single-Family Homes\", \"Shop Houses\",\"Town house\",\"Apartment\",\"Condominium\",\"Cooperative Housing\",\"Mobile Home\",\"Time-Share Homes\",]\n  furnishTypes: Array<string> = ['Fully', 'Semi', 'Unfurnished']\n\n  propertyView: IPropertyBase = {\n    Id: null,\n    Name: '',\n    Price: null,\n    SellRent: null,\n    PType: null,\n    FType: null,\n    BHK: null,\n    BuiltArea: null,\n    City: null,\n    RTM: null\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private housingService: HousingService\n   ) { }\n\n  ngOnInit() {\n    this.CreateAddPropertyForm();\n  }\n\n  CreateAddPropertyForm() {\n    this.addPropertyForm = this.fb.group({\n      BasicInfo: this.fb.group({\n        SellRent: ['1' , Validators.required],\n        BHK: [null, Validators.required],\n        PType: [null, Validators.required],\n        FType: [null, Validators.required],\n        Name: [null, Validators.required],\n        City: [null, Validators.required]\n      }),\n\n      PriceInfo: this.fb.group({\n        Price: [null, Validators.required],\n        BuiltArea: [null, Validators.required],\n        CarpetArea: [null],\n        Security: [null],\n        Maintenance: [null],\n      }),\n\n      AddressInfo: this.fb.group({\n        FloorNo: [null],\n        TotalFloor: [null],\n        Address: [null, Validators.required],\n        LandMark: [null],\n      }),\n\n      OtherInfo: this.fb.group({\n        RTM: [null, Validators.required],\n        PossessionOn: [null],\n        AOP: [null],\n        Gated: [null],\n        MainEntrance: [null],\n        Description: [null]\n      })\n      });\n  }\n\n  /////// Gettet Method //////\n  //#region <Getter Methods>\n  // #region <FormGroups>\n\n  get BasicInfo(){\n    return this.addPropertyForm.controls['BasicInfo'] as FormGroup;\n  }\n\n  get PriceInfo(){\n    return this.addPropertyForm.controls['PriceInfo'] as FormGroup;\n  }\n\n  get AddressInfo(){\n    return this.addPropertyForm.controls['AddressInfo'] as FormGroup;\n  }\n\n  get OtherInfo(){\n    return this.addPropertyForm.controls['OtherInfo'] as FormGroup;\n  }\n\n  \n  ////////////////////////////\n\n    // #endregion\n\n  //#region <Form Controls\n  get SellRent() {\n    return this.BasicInfo.controls['SellRen'] as FormControl;\n  }\n\n  get BHK() {\n    return this.BasicInfo.controls['BHK'] as FormControl;\n  }\n\n  get PType() {\n    return this.BasicInfo.controls['PType'] as FormControl;\n  }\n\n  get FType() {\n    return this.BasicInfo.controls['FType'] as FormControl;\n  }\n\n  get Name() {\n    return this.BasicInfo.controls['Name'] as FormControl;\n  }\n\n  get City() {\n    return this.BasicInfo.controls['City'] as FormControl;\n  }\n\n  get Price() {\n    return this.PriceInfo.controls['Price'] as FormControl;\n  }\n\n  get BuiltArea() {\n    return this.PriceInfo.controls['BuiltArea'] as FormControl;\n  }\n\n  get CarpetArea() {\n    return this.PriceInfo.controls['CarpetArea'] as FormControl;\n  }\n\n  get Security() {\n    return this.PriceInfo.controls['Security'] as FormControl;\n  }\n\n  get Maintenance() {\n    return this.PriceInfo.controls['Maintenance'] as FormControl;\n  }\n\n  get FloorNo() {\n    return this.AddressInfo.controls['FloorNo'] as FormControl;\n  }\n\n  get TotalFloor() {\n    return this.AddressInfo.controls['TotalFloor'] as FormControl;\n  }\n\n  get Address() {\n    return this.AddressInfo.controls['Address'] as FormControl;\n  }\n\n  get LandMark() {\n    return this.AddressInfo.controls['LandMark'] as FormControl;\n  }\n\n  get RTM() {\n    return this.OtherInfo.controls['RTM ']as FormControl;\n  }\n\n  get PossessionOn() {\n    return this.OtherInfo.controls['PossessionOn'] as FormControl;\n  }\n\n  get AOP() {\n    return this.OtherInfo.controls['AOP'] as FormControl;\n  }\n\n  get Gated() {\n    return this.OtherInfo.controls['Gated'] as FormControl;\n  }\n\n  get MainEntrance() {\n    return this.OtherInfo.controls['MainEntrance'] as FormControl;\n  }\n\n  get Description() {\n    return this.OtherInfo.controls['Description'] as FormControl;\n  }\n\n//#endregion\n//#endregion\n\n  onBack() {\n    this.router.navigate(['/']);\n  }\n\n  onSubmit() {\n\n      this.mapProperty();\n      this.housingService.addProperty(this.property);\n      alert('Congrats, your property listed successfully on our website');\n      console.log(this.addPropertyForm);\n\n      if(this.SellRent.value === '2') {\n        this.router.navigate(['/rent-property']);\n      } else {\n        this.router.navigate(['/']);\n      }\n\n\n     \n     \n  }\n\n  mapProperty(): void {\n    this.property.SellRent = +this.SellRent.value;\n    this.property.BHK = this.BHK.value;\n    this.property.PType = this.PType.value;\n    this.property.Name = this.Name.value;\n    this.property.City = this.City.value;\n    this.property.FType = this.FType.value;\n    this.property.Price = this.Price.value;\n    this.property.Security = this.Security.value;\n    this.property.Maintenance = this.Maintenance.value;\n    this.property.BuiltArea = this.BuiltArea.value;\n    this.property.CarpetArea = this.CarpetArea.value;\n    this.property.FloorNo = this.FloorNo.value;\n    this.property.TotalFloor = this.TotalFloor.value;\n    this.property.Address = this.Address.value;\n    this.property.Address2 = this.LandMark.value;\n    this.property.RTM = this.RTM.value;\n    this.property.AOP = this.AOP.value;\n    this.property.Gated = this.Gated.value;\n    this.property.MainEntrance = this.MainEntrance.value;\n    this.property.Possession = this.PossessionOn.value;\n    this.property.Description = this.Description.value;\n    this.property.PostedOn = new Date().toString();\n  }\n\n \n\n  selectTab(tabId: number) {\n      this.formTabs.tabs[tabId].active = true;\n  }\n\n}","<tabset [justified]=\"true\">\n  <tab heading=\"Justified\">Justified content</tab>\n  <tab heading=\"SJ\">Short Labeled Justified content</tab>\n  <tab heading=\"Long Justified\">Long Labeled Justified content</tab>\n</tabset>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}