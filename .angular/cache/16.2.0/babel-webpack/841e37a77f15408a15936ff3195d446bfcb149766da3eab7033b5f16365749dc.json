{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let UserRegisterComponent = class UserRegisterComponent {\n  constructor(fb, userService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.userSubmited = false;\n  }\n  ngOnInit() {\n    // this.registerationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmPassword: new FormControl(null, [Validators.required, this.passwordMatchingValidatior]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(9)])\n    // });\n    // this.registerationForm.controls['userName'].setValue('Default Value')\n    this.createRegisterationForm();\n    this.registerationForm.controls['userName'].setValue('Default Value');\n    this.registerationForm.controls['email'].setValue('example@example.com');\n  }\n  createRegisterationForm() {\n    this.registerationForm = this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, [Validators.required, this.passwordMatchingValidatior]],\n      mobile: [null, [Validators.required, Validators.maxLength(10)]]\n    }, {\n      validators: this.passwordMatchingValidatior\n    });\n  }\n  passwordMatchingValidatior() {\n    return control => {\n      const password = this.registerationForm.get('password').value;\n      const confirmPassword = control.value;\n      return password === confirmPassword ? null : {\n        passwordNotMatched: true\n      };\n    };\n  }\n  userData() {\n    return this.user = {\n      userName: this.userName.value,\n      email: this.email.value,\n      password: this.password.value,\n      mobile: this.mobile.value\n    };\n  }\n  // ------------------------------------\n  // Getter methods for all form controls\n  // ------------------------------------\n  get userName() {\n    return this.registerationForm.get('userName');\n  }\n  get email() {\n    return this.registerationForm.get('email');\n  }\n  get password() {\n    return this.registerationForm.get('password');\n  }\n  get confirmPassword() {\n    return this.registerationForm.get('confirmPassword');\n  }\n  get mobile() {\n    return this.registerationForm.get('mobile');\n  }\n  // ------------------------\n  onSubmit() {\n    console.log(this.registerationForm.value);\n    this.userSubmited = true;\n    if (this.registerationForm.valid) {\n      // this.user = Object.assign(this.user, this.registerationForm.value);\n      this.userService.addUser(this.userData());\n      this.registerationForm.reset();\n      this.userSubmited = false;\n    }\n  }\n};\nUserRegisterComponent = __decorate([Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})], UserRegisterComponent);","map":{"version":3,"names":["Component","Validators","UserRegisterComponent","constructor","fb","userService","userSubmited","ngOnInit","createRegisterationForm","registerationForm","controls","setValue","group","userName","required","email","password","minLength","confirmPassword","passwordMatchingValidatior","mobile","maxLength","validators","control","get","value","passwordNotMatched","userData","user","onSubmit","console","log","valid","addUser","reset","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\code\\Angular\\my_app\\frontend\\src\\app\\user\\user-register\\user-register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators ,ValidatorFn, AbstractControl,FormBuilder } from '@angular/forms';\nimport { User } from 'src/app/Interface/User';\nimport { UserService } from 'src/app/services/user-service';\n\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit{\n  registerationForm!: FormGroup;\n  user!: User;\n  userSubmited: boolean = false;\n  constructor(private fb: FormBuilder,private userService: UserServiceService){\n\n  }\n  ngOnInit() {\n    // this.registerationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmPassword: new FormControl(null, [Validators.required, this.passwordMatchingValidatior]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(9)])\n    // });\n    // this.registerationForm.controls['userName'].setValue('Default Value')\n    \n    this.createRegisterationForm();\n    this.registerationForm.controls['userName'].setValue('Default Value');\n    this.registerationForm.controls['email'].setValue('example@example.com');\n  }\n\n  createRegisterationForm(){\n    this.registerationForm = this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password:[null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, [Validators.required, this.passwordMatchingValidatior]],\n      mobile: [null,[Validators.required, Validators.maxLength(10)]]\n    },{validators:this.passwordMatchingValidatior })\n  }\n\n  passwordMatchingValidatior(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const password = this.registerationForm.get('password')!.value;\n      const confirmPassword = control.value;\n      return password === confirmPassword ? null : { passwordNotMatched: true };\n    };\n  }\n  \n  userData():User{\n    return this.user = {\n      userName: this.userName.value,\n      email: this.email.value,\n      password: this.password.value,\n      mobile: this.mobile.value\n    }\n  }\n  // ------------------------------------\n  // Getter methods for all form controls\n  // ------------------------------------\n  get userName() {\n    return this.registerationForm.get('userName') as FormControl;\n  }\n\n  get email() {\n    return this.registerationForm.get('email') as FormControl;\n  }\n  get password() {\n    return this.registerationForm.get('password') as FormControl;\n  }\n  get confirmPassword() {\n    return this.registerationForm.get('confirmPassword') as FormControl;\n  }\n  get mobile() {\n    return this.registerationForm.get('mobile') as FormControl;\n  }\n  // ------------------------\n\n  onSubmit() {\n    console.log(this.registerationForm.value); \n    this.userSubmited = true;\n    if(this.registerationForm.valid){\n    // this.user = Object.assign(this.user, this.registerationForm.value);\n    this.userService.addUser(this.userData());\n    this.registerationForm.reset();\n    this.userSubmited = false;\n    \n  }\n  }\n\n \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}