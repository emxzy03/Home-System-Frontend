{"ast":null,"code":"var _class;\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HousingService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllPropperties(SellRent) {\n    // return this.http.get<IProperty[]>('data/properties.json').pipe(\n    //   map(data => {\n    //     const propArray: Array<IProperty> = [];\n    //     for (const index in data ) {\n    //       if (data.hasOwnProperty(index) &&  data[index].SellRent === SellRent) {\n    //         propArray.push(data[index]);\n    //       }\n    //     }\n    //     return propArray;\n    //   })\n    // );\n    return this.http.get('data/properties.json').pipe(map(data => {\n      return Object.values(data).filter(property => property.SellRent === SellRent);\n    }));\n  }\n  addProperty(property) {\n    localStorage.setItem('newProp', JSON.stringify(property));\n  }\n}\n_class = HousingService;\n_class.ɵfac = function HousingService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","HousingService","constructor","http","getAllPropperties","SellRent","get","pipe","data","Object","values","filter","property","addProperty","localStorage","setItem","JSON","stringify","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\code\\Angular\\my_app\\frontend\\src\\app\\services\\housing.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { IProperty } from '../Interface/IProperty.interface';\nimport { Property } from '../Interface/Property';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  constructor(private http: HttpClient) { }\n \n  getAllPropperties(SellRent: number) {\n    // return this.http.get<IProperty[]>('data/properties.json').pipe(\n    //   map(data => {\n    //     const propArray: Array<IProperty> = [];\n    //     for (const index in data ) {\n    //       if (data.hasOwnProperty(index) &&  data[index].SellRent === SellRent) {\n    //         propArray.push(data[index]);\n    //       }\n    //     }\n    //     return propArray;\n    //   })\n    // );\n\n    return this.http.get<IProperty[]>('data/properties.json').pipe(\n      map(data => {\n        return Object.values(data).filter(property => property.SellRent === SellRent);\n      })\n    );\n\n  }\n  addProperty(property: Property) {\n    localStorage.setItem('newProp', JSON.stringify(property));\n  }\n\n}\n"],"mappings":";AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAOpC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,iBAAiBA,CAACC,QAAgB;IAChC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,sBAAsB,CAAC,CAACC,IAAI,CAC5DP,GAAG,CAACQ,IAAI,IAAG;MACT,OAAOC,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC,CAACG,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACP,QAAQ,KAAKA,QAAQ,CAAC;IAC/E,CAAC,CAAC,CACH;EAEH;EACAQ,WAAWA,CAACD,QAAkB;IAC5BE,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC;EAC3D;;SA1BWX,cAAc;;mBAAdA,MAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdpB,MAAc;EAAAqB,OAAA,EAAdrB,MAAc,CAAAsB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}