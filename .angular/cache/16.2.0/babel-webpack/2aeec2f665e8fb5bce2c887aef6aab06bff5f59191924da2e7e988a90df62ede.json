{"ast":null,"code":"var _class;\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HousingService {\n  constructor(http) {\n    this.http = http;\n  }\n  // getAllPropperties(SellRent: number) {\n  //   return this.http.get<IProperty>('data/properties.json').pipe(\n  //     map(data => {\n  //       const propArray: Array<IProperty> = [];\n  //       for (const index in data) {\n  //         if (data.hasOwnProperty(index) && data[index].SellRent === SellRent) {\n  //           //Use Object.value must confident in the accuracy of the information in data\n  //           propArray.push(...Object.values(data)); \n  //         }\n  //         // return propArray;\n  //       }\n  //       return propArray;\n  //     })\n  //   )\n  //   // return  this.http.get<IProperty>('data/properties.json')\n  // }\n  getAllPropperties(SellRent) {\n    return this.http.get('data/properties.json').pipe(map(data => {\n      const propArray = [];\n      for (const index in data) {\n        if (data.hasOwnProperty(index)) {\n          propArray.push(data[index]);\n        }\n      }\n      return propArray;\n    }));\n  }\n}\n_class = HousingService;\n_class.ɵfac = function HousingService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","HousingService","constructor","http","getAllPropperties","SellRent","get","pipe","data","propArray","index","hasOwnProperty","push","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\code\\Angular\\my_app\\frontend\\src\\app\\services\\housing.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { IProperty } from '../Interface/IProperty.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  constructor(private http: HttpClient) { }\n\n  // getAllPropperties(SellRent: number) {\n  //   return this.http.get<IProperty>('data/properties.json').pipe(\n  //     map(data => {\n  //       const propArray: Array<IProperty> = [];\n  //       for (const index in data) {\n  //         if (data.hasOwnProperty(index) && data[index].SellRent === SellRent) {\n\n  //           //Use Object.value must confident in the accuracy of the information in data\n  //           propArray.push(...Object.values(data)); \n  //         }\n  //         // return propArray;\n  //       }\n        \n  //       return propArray;\n  //     })\n  //   )\n\n  //   // return  this.http.get<IProperty>('data/properties.json')\n\n  // }\n \n  getAllPropperties(SellRent: number) {\n    return this.http.get<IProperty[]>('data/properties.json').pipe(\n      map(data => {\n        const propArray: Array<IProperty> = [];\n        for (const index in data) {\n          if (data.hasOwnProperty(index)) {\n            propArray.push(data[index]);\n          }\n        }\n        return propArray;\n      })\n    );\n  }\n}\n"],"mappings":";AAEA,SAASA,GAAG,QAAQ,gBAAgB;;;AAMpC,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExC;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EAEA;EAEAC,iBAAiBA,CAACC,QAAgB;IAChC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,sBAAsB,CAAC,CAACC,IAAI,CAC5DP,GAAG,CAACQ,IAAI,IAAG;MACT,MAAMC,SAAS,GAAqB,EAAE;MACtC,KAAK,MAAMC,KAAK,IAAIF,IAAI,EAAE;QACxB,IAAIA,IAAI,CAACG,cAAc,CAACD,KAAK,CAAC,EAAE;UAC9BD,SAAS,CAACG,IAAI,CAACJ,IAAI,CAACE,KAAK,CAAC,CAAC;;;MAG/B,OAAOD,SAAS;IAClB,CAAC,CAAC,CACH;EACH;;SArCWR,cAAc;;mBAAdA,MAAc,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdf,MAAc;EAAAgB,OAAA,EAAdhB,MAAc,CAAAiB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}