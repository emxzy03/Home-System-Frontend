{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HousingService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllPropperties(SellRent) {\n    return this.http.get('data/properties.json').pipe(map => {\n      const propArray = [];\n      for (const index in data) {\n        if (data.hasOwnProperty(index)) {\n          //Use Object.value must confident in the accuracy of the information in data\n          propArray.push(...Object.values(data));\n        }\n        return propArray;\n      }\n      // for (const index in data) {\n      //   console.log(data);\n      //   propArray.push(data[index]);\n      // }\n      return propArray;\n    });\n    // return  this.http.get<IProperty>('data/properties.json')\n  }\n}\n_class = HousingService;\n_class.ɵfac = function HousingService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HousingService","constructor","http","getAllPropperties","SellRent","get","pipe","map","propArray","index","data","hasOwnProperty","push","Object","values","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\code\\Angular\\my_app\\frontend\\src\\app\\services\\housing.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { IProperty } from '../Interface/IProperty.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllPropperties(SellRent: number) {\n    return this.http.get<IProperty>('data/properties.json').pipe(\n      map => {\n        const propArray: Array<IProperty> = [];\n        for (const index in data) {\n          if (data.hasOwnProperty(index) ) {\n\n            //Use Object.value must confident in the accuracy of the information in data\n            propArray.push(...Object.values(data)); \n          }\n          return propArray;\n        }\n        \n        // for (const index in data) {\n        //   console.log(data);\n        //   propArray.push(data[index]);\n        // }\n        return propArray;\n      })\n    )\n\n    // return  this.http.get<IProperty>('data/properties.json')\n\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,iBAAiBA,CAACC,QAAgB;IAChC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,sBAAsB,CAAC,CAACC,IAAI,CAC1DC,GAAG,IAAG;MACJ,MAAMC,SAAS,GAAqB,EAAE;MACtC,KAAK,MAAMC,KAAK,IAAIC,IAAI,EAAE;QACxB,IAAIA,IAAI,CAACC,cAAc,CAACF,KAAK,CAAC,EAAG;UAE/B;UACAD,SAAS,CAACI,IAAI,CAAC,GAAGC,MAAM,CAACC,MAAM,CAACJ,IAAI,CAAC,CAAC;;QAExC,OAAOF,SAAS;;MAGlB;MACA;MACA;MACA;MACA,OAAOA,SAAS;IAClB,CAAC,CAAC;IAGJ;EAEF;;SA3BWR,cAAc;;mBAAdA,MAAc,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdlB,MAAc;EAAAmB,OAAA,EAAdnB,MAAc,CAAAoB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}