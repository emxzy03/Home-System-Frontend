{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let UserRegisterComponent = class UserRegisterComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.user = {};\n  }\n  ngOnInit() {\n    // this.registerationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmPassword: new FormControl(null, [Validators.required, this.passwordMatchingValidatior]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(9)])\n    // });\n    // this.registerationForm.controls['userName'].setValue('Default Value')\n    this.createRegisterationForm();\n    this.registerationForm.controls['userName'].setValue('Default Value');\n    this.registerationForm.controls['email'].setValue('example@example.com');\n  }\n  createRegisterationForm() {\n    this.registerationForm = this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, [Validators.required, this.passwordMatchingValidatior]],\n      mobile: [null, [Validators.required, Validators.maxLength(9)]]\n    }, {\n      validators: this.passwordMatchingValidatior\n    });\n  }\n  passwordMatchingValidatior() {\n    return control => {\n      const password = this.registerationForm.get('password').value;\n      const confirmPassword = control.value;\n      return password === confirmPassword ? null : {\n        passwordNotMatched: true\n      };\n    };\n  }\n  // ------------------------------------\n  // Getter methods for all form controls\n  // ------------------------------------\n  get userName() {\n    return this.registerationForm.get('userName');\n  }\n  get email() {\n    return this.registerationForm.get('email');\n  }\n  get password() {\n    return this.registerationForm.get('password');\n  }\n  get confirmPassword() {\n    return this.registerationForm.get('confirmPassword');\n  }\n  get mobile() {\n    return this.registerationForm.get('mobile');\n  }\n  // ------------------------\n  onSubmit() {\n    console.log(this.registerationForm.value);\n    this.user = Object.assign(this.user, this.registerationForm.value);\n    this.addUser(this.user);\n    this.registerationForm.reset();\n  }\n  addUser(user) {\n    let users = [];\n    if (localStorage.getItem('Users')) {\n      users = JSON.parse(localStorage.getItem('Users'));\n      users = [user, ...users];\n    } else {\n      users = [user];\n    }\n    localStorage.setItem('Users', JSON.stringify(users));\n  }\n};\nUserRegisterComponent = __decorate([Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})], UserRegisterComponent);","map":{"version":3,"names":["Component","Validators","UserRegisterComponent","constructor","fb","user","ngOnInit","createRegisterationForm","registerationForm","controls","setValue","group","userName","required","email","password","minLength","confirmPassword","passwordMatchingValidatior","mobile","maxLength","validators","control","get","value","passwordNotMatched","onSubmit","console","log","Object","assign","addUser","reset","users","localStorage","getItem","JSON","parse","setItem","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\code\\Angular\\my_app\\frontend\\src\\app\\user\\user-register\\user-register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators ,ValidatorFn, AbstractControl,FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit{\n  registerationForm!: FormGroup;\n  user: any = {};\n  constructor(private fb: FormBuilder){\n\n  }\n  ngOnInit() {\n    // this.registerationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmPassword: new FormControl(null, [Validators.required, this.passwordMatchingValidatior]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(9)])\n    // });\n    // this.registerationForm.controls['userName'].setValue('Default Value')\n    \n    this.createRegisterationForm();\n    this.registerationForm.controls['userName'].setValue('Default Value');\n    this.registerationForm.controls['email'].setValue('example@example.com');\n  }\n\n  createRegisterationForm(){\n    this.registerationForm = this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password:[null, [Validators.required, Validators.minLength(8)]],\n      confirmPassword: [null, [Validators.required, this.passwordMatchingValidatior]],\n      mobile: [null,[Validators.required, Validators.maxLength(9)]]\n    },{validators:this.passwordMatchingValidatior })\n  }\n\n  passwordMatchingValidatior(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const password = this.registerationForm.get('password')!.value;\n      const confirmPassword = control.value;\n      return password === confirmPassword ? null : { passwordNotMatched: true };\n    };\n  }\n  \n  // ------------------------------------\n  // Getter methods for all form controls\n  // ------------------------------------\n  get userName() {\n    return this.registerationForm.get('userName') as FormControl;\n  }\n\n  get email() {\n    return this.registerationForm.get('email') as FormControl;\n  }\n  get password() {\n    return this.registerationForm.get('password') as FormControl;\n  }\n  get confirmPassword() {\n    return this.registerationForm.get('confirmPassword') as FormControl;\n  }\n  get mobile() {\n    return this.registerationForm.get('mobile') as FormControl;\n  }\n  // ------------------------\n\n  onSubmit() {\n    console.log(this.registerationForm.value); \n    this.user = Object.assign(this.user, this.registerationForm.value);\n    this.addUser(this.user);\n    this.registerationForm.reset();\n  }\n\n  addUser(user: any){\n    let users = [];\n    if(localStorage.getItem('Users')){\n      users = JSON.parse(localStorage.getItem('Users')!);\n      users = [user, ...users];\n    } else {\n      users = [user];\n    }\n    localStorage.setItem('Users', JSON.stringify(users));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}